//---------------------------------------------------------------------------////    This file is part of Chat Informer project//    Copyright (C) 2009, 2011, 2014 Ilya Golovenko////---------------------------------------------------------------------------// Application headers#include <network/tcp/connection_timer.hpp>#include <network/util/bind_handler.hpp>namespace chat{namespace net{namespace tcp{connection_timer::connection_timer(connection& connection) :    impl_(new impl(connection)){}void connection_timer::start(std::chrono::seconds const& timeout){    impl_->start(timeout);}void connection_timer::cancel(){    impl_->cancel();}connection_timer::impl::impl(connection_timer& owner) :    connection_(owner.connection_),    timeout_timer_(connection_.get_io_service()){}void connection_timer::impl::start(std::chrono::seconds const& timeout){    timeout_timer_.async_wait(timeout, bind_weak_handler(shared_from_this(), &impl::handle_timeout));}void connection_timer::impl::cancel(){    timeout_timer_.cancel();}void connection_timer::impl::handle_timeout(boost::system::error_code const& error){    if(!error)        connection_.close();}}   // namespace tcp}   // namespace net}   // namespace chat