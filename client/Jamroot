
import os ;

path-constant TOP : . ;
path-constant SRC : src ;
path-constant BIN : bin ;
path-constant TEST : test ;
path-constant DEPENDS : depends ;

local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;

if ! $(BOOST_ROOT)
{
    echo ;
    echo "Required environment variable BOOST_ROOT is not set" ;
    echo "Please set it to point to the root of BOOST distribution" ;
    exit ;
}

use-project /boost : $(BOOST_ROOT) ;

use-project /missio : $(DEPENDS)/missio ;

use-project /cpp-netlib : $(DEPENDS)/cpp-netlib ;

project informer
    :
        requirements
        <warnings>all
        <include>$(SRC)
        <include>$(BOOST_ROOT)
        <include>$(DEPENDS)/missio
        <include>$(DEPENDS)/cpp-netlib
        <define>BOOST_ALL_NO_LIB
        <define>BOOST_FILESYSTEM_VERSION=3
        <define>BOOST_FILESYSTEM_NO_DEPRECATE
        <toolset>msvc:<define>WIN32
        <toolset>msvc:<define>_WIN32
        <toolset>msvc:<define>UNICODE
        <toolset>msvc:<define>_UNICODE
        <toolset>msvc:<define>NOMINMAX
        <toolset>msvc:<define>_WIN32_WINNT=0x0501
        <toolset>msvc:<define>WIN32_LEAN_AND_MEAN
        <toolset>msvc:<define>_SCL_SECURE_NO_WARNINGS
        <toolset>msvc:<define>_SCL_SECURE_NO_DEPRECATE
        <toolset>msvc:<define>_CRT_SECURE_NO_WARNINGS
        <toolset>msvc:<define>_CRT_SECURE_NO_DEPRECATE
        <toolset>msvc:<define>_CRT_NONSTDC_NO_DEPRECATE
        <toolset>msvc:<cxxflags>/wd4100
        <toolset>msvc:<cxxflags>/wd4127
        <toolset>msvc:<cxxflags>/wd4244
        <toolset>msvc:<cxxflags>/wd4345
        <toolset>msvc:<cxxflags>/wd4512
        <toolset>msvc:<cxxflags>/wd4702
        <toolset>msvc:<cxxflags>/wd4714
        <toolset>msvc:<cxxflags>/wd4800
    :
        default-build
        release debug
        <threading>multi
        <runtime-link>static
        <link>static
    :
        build-dir
        obj
    ;

use-project /informer : $(TOP) ;

use-project /informer/application : $(SRC)/informer ;
use-project /informer/utility : $(SRC)/utility ;
use-project /informer/crypto : $(SRC)/crypto ;
use-project /informer/core : $(SRC)/core ;

use-project /informer/test/utility : $(TEST)/utility ;
use-project /informer/test/crypto : $(TEST)/crypto ;

build-project $(TEST)/utility ;
build-project $(TEST)/crypto ;

build-project $(SRC)/informer ;

install informer
    :
        ## sources ##
        /informer/application
    :
        ## build requirements ##
        <variant>release:<location>$(BIN)/release
        <variant>profile:<location>$(BIN)/profile
        <variant>debug:<location>$(BIN)/debug
    ;
